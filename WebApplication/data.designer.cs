#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="search")]
	public partial class dataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFile_type(File_type instance);
    partial void UpdateFile_type(File_type instance);
    partial void DeleteFile_type(File_type instance);
    partial void Insertmeaning(meaning instance);
    partial void Updatemeaning(meaning instance);
    partial void Deletemeaning(meaning instance);
    partial void Insertuploaded_file(uploaded_file instance);
    partial void Updateuploaded_file(uploaded_file instance);
    partial void Deleteuploaded_file(uploaded_file instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertWord(Word instance);
    partial void UpdateWord(Word instance);
    partial void DeleteWord(Word instance);
    partial void InsertWorld_syn(World_syn instance);
    partial void UpdateWorld_syn(World_syn instance);
    partial void DeleteWorld_syn(World_syn instance);
    partial void InsertWord_search(Word_search instance);
    partial void UpdateWord_search(Word_search instance);
    partial void DeleteWord_search(Word_search instance);
    #endregion
		
		public dataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["searchConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<File_type> File_types
		{
			get
			{
				return this.GetTable<File_type>();
			}
		}
		
		public System.Data.Linq.Table<meaning> meanings
		{
			get
			{
				return this.GetTable<meaning>();
			}
		}
		
		public System.Data.Linq.Table<uploaded_file> uploaded_files
		{
			get
			{
				return this.GetTable<uploaded_file>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Word> Words
		{
			get
			{
				return this.GetTable<Word>();
			}
		}
		
		public System.Data.Linq.Table<World_syn> World_syns
		{
			get
			{
				return this.GetTable<World_syn>();
			}
		}
		
		public System.Data.Linq.Table<Word_search> Word_searches
		{
			get
			{
				return this.GetTable<Word_search>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.File_type")]
	public partial class File_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Company;
		
		private int _F_k_file;
		
		private EntityRef<uploaded_file> _uploaded_file;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnF_k_fileChanging(int value);
    partial void OnF_k_fileChanged();
    #endregion
		
		public File_type()
		{
			this._uploaded_file = default(EntityRef<uploaded_file>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(90)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_k_file", DbType="Int NOT NULL")]
		public int F_k_file
		{
			get
			{
				return this._F_k_file;
			}
			set
			{
				if ((this._F_k_file != value))
				{
					if (this._uploaded_file.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnF_k_fileChanging(value);
					this.SendPropertyChanging();
					this._F_k_file = value;
					this.SendPropertyChanged("F_k_file");
					this.OnF_k_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uploaded_file_File_type", Storage="_uploaded_file", ThisKey="F_k_file", OtherKey="ID", IsForeignKey=true)]
		public uploaded_file uploaded_file
		{
			get
			{
				return this._uploaded_file.Entity;
			}
			set
			{
				uploaded_file previousValue = this._uploaded_file.Entity;
				if (((previousValue != value) 
							|| (this._uploaded_file.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uploaded_file.Entity = null;
						previousValue.File_types.Remove(this);
					}
					this._uploaded_file.Entity = value;
					if ((value != null))
					{
						value.File_types.Add(this);
						this._F_k_file = value.ID;
					}
					else
					{
						this._F_k_file = default(int);
					}
					this.SendPropertyChanged("uploaded_file");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.meaning")]
	public partial class meaning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _word1;
		
		private string _word2;
		
		private string _rootA;
		
		private string _rootE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onword1Changing(string value);
    partial void Onword1Changed();
    partial void Onword2Changing(string value);
    partial void Onword2Changed();
    partial void OnrootAChanging(string value);
    partial void OnrootAChanged();
    partial void OnrootEChanging(string value);
    partial void OnrootEChanged();
    #endregion
		
		public meaning()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_word1", DbType="NVarChar(20)")]
		public string word1
		{
			get
			{
				return this._word1;
			}
			set
			{
				if ((this._word1 != value))
				{
					this.Onword1Changing(value);
					this.SendPropertyChanging();
					this._word1 = value;
					this.SendPropertyChanged("word1");
					this.Onword1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_word2", DbType="NVarChar(20)")]
		public string word2
		{
			get
			{
				return this._word2;
			}
			set
			{
				if ((this._word2 != value))
				{
					this.Onword2Changing(value);
					this.SendPropertyChanging();
					this._word2 = value;
					this.SendPropertyChanged("word2");
					this.Onword2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rootA", DbType="NVarChar(20)")]
		public string rootA
		{
			get
			{
				return this._rootA;
			}
			set
			{
				if ((this._rootA != value))
				{
					this.OnrootAChanging(value);
					this.SendPropertyChanging();
					this._rootA = value;
					this.SendPropertyChanged("rootA");
					this.OnrootAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rootE", DbType="NVarChar(20)")]
		public string rootE
		{
			get
			{
				return this._rootE;
			}
			set
			{
				if ((this._rootE != value))
				{
					this.OnrootEChanging(value);
					this.SendPropertyChanging();
					this._rootE = value;
					this.SendPropertyChanged("rootE");
					this.OnrootEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uploaded_file")]
	public partial class uploaded_file : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Uploaded_by;
		
		private string _file_name;
		
		private int _Admin_id;
		
		private System.Nullable<System.DateTime> _date_uploaded;
		
		private string _Key_words;
		
		private string _File_path;
		
		private EntitySet<File_type> _File_types;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUploaded_byChanging(string value);
    partial void OnUploaded_byChanged();
    partial void Onfile_nameChanging(string value);
    partial void Onfile_nameChanged();
    partial void OnAdmin_idChanging(int value);
    partial void OnAdmin_idChanged();
    partial void Ondate_uploadedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_uploadedChanged();
    partial void OnKey_wordsChanging(string value);
    partial void OnKey_wordsChanged();
    partial void OnFile_pathChanging(string value);
    partial void OnFile_pathChanged();
    #endregion
		
		public uploaded_file()
		{
			this._File_types = new EntitySet<File_type>(new Action<File_type>(this.attach_File_types), new Action<File_type>(this.detach_File_types));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uploaded_by", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Uploaded_by
		{
			get
			{
				return this._Uploaded_by;
			}
			set
			{
				if ((this._Uploaded_by != value))
				{
					this.OnUploaded_byChanging(value);
					this.SendPropertyChanging();
					this._Uploaded_by = value;
					this.SendPropertyChanged("Uploaded_by");
					this.OnUploaded_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_name", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string file_name
		{
			get
			{
				return this._file_name;
			}
			set
			{
				if ((this._file_name != value))
				{
					this.Onfile_nameChanging(value);
					this.SendPropertyChanging();
					this._file_name = value;
					this.SendPropertyChanged("file_name");
					this.Onfile_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_id", DbType="Int NOT NULL")]
		public int Admin_id
		{
			get
			{
				return this._Admin_id;
			}
			set
			{
				if ((this._Admin_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmin_idChanging(value);
					this.SendPropertyChanging();
					this._Admin_id = value;
					this.SendPropertyChanged("Admin_id");
					this.OnAdmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_uploaded", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_uploaded
		{
			get
			{
				return this._date_uploaded;
			}
			set
			{
				if ((this._date_uploaded != value))
				{
					this.Ondate_uploadedChanging(value);
					this.SendPropertyChanging();
					this._date_uploaded = value;
					this.SendPropertyChanged("date_uploaded");
					this.Ondate_uploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Key_words", DbType="NVarChar(660)")]
		public string Key_words
		{
			get
			{
				return this._Key_words;
			}
			set
			{
				if ((this._Key_words != value))
				{
					this.OnKey_wordsChanging(value);
					this.SendPropertyChanging();
					this._Key_words = value;
					this.SendPropertyChanged("Key_words");
					this.OnKey_wordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_path", DbType="NVarChar(900)")]
		public string File_path
		{
			get
			{
				return this._File_path;
			}
			set
			{
				if ((this._File_path != value))
				{
					this.OnFile_pathChanging(value);
					this.SendPropertyChanging();
					this._File_path = value;
					this.SendPropertyChanged("File_path");
					this.OnFile_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uploaded_file_File_type", Storage="_File_types", ThisKey="ID", OtherKey="F_k_file")]
		public EntitySet<File_type> File_types
		{
			get
			{
				return this._File_types;
			}
			set
			{
				this._File_types.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_uploaded_file", Storage="_User", ThisKey="Admin_id", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.uploaded_files.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.uploaded_files.Add(this);
						this._Admin_id = value.ID;
					}
					else
					{
						this._Admin_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_File_types(File_type entity)
		{
			this.SendPropertyChanging();
			entity.uploaded_file = this;
		}
		
		private void detach_File_types(File_type entity)
		{
			this.SendPropertyChanging();
			entity.uploaded_file = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _First_Name;
		
		private string _last_name;
		
		private System.DateTime _date_of_birth;
		
		private string _User_name;
		
		private string _password;
		
		private System.Nullable<bool> _type;
		
		private EntitySet<uploaded_file> _uploaded_files;
		
		private EntitySet<Word_search> _Word_searches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Ondate_of_birthChanging(System.DateTime value);
    partial void Ondate_of_birthChanged();
    partial void OnUser_nameChanging(string value);
    partial void OnUser_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OntypeChanging(System.Nullable<bool> value);
    partial void OntypeChanged();
    #endregion
		
		public User()
		{
			this._uploaded_files = new EntitySet<uploaded_file>(new Action<uploaded_file>(this.attach_uploaded_files), new Action<uploaded_file>(this.detach_uploaded_files));
			this._Word_searches = new EntitySet<Word_search>(new Action<Word_search>(this.attach_Word_searches), new Action<Word_search>(this.detach_Word_searches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="Date NOT NULL")]
		public System.DateTime date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string User_name
		{
			get
			{
				return this._User_name;
			}
			set
			{
				if ((this._User_name != value))
				{
					this.OnUser_nameChanging(value);
					this.SendPropertyChanging();
					this._User_name = value;
					this.SendPropertyChanged("User_name");
					this.OnUser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Bit")]
		public System.Nullable<bool> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_uploaded_file", Storage="_uploaded_files", ThisKey="ID", OtherKey="Admin_id")]
		public EntitySet<uploaded_file> uploaded_files
		{
			get
			{
				return this._uploaded_files;
			}
			set
			{
				this._uploaded_files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Word_search", Storage="_Word_searches", ThisKey="ID", OtherKey="Searcher_id")]
		public EntitySet<Word_search> Word_searches
		{
			get
			{
				return this._Word_searches;
			}
			set
			{
				this._Word_searches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uploaded_files(uploaded_file entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_uploaded_files(uploaded_file entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Word_searches(Word_search entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Word_searches(Word_search entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Word")]
	public partial class Word : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Word1;
		
		private EntitySet<World_syn> _World_syns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWord1Changing(string value);
    partial void OnWord1Changed();
    #endregion
		
		public Word()
		{
			this._World_syns = new EntitySet<World_syn>(new Action<World_syn>(this.attach_World_syns), new Action<World_syn>(this.detach_World_syns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Word", Storage="_Word1", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Word1
		{
			get
			{
				return this._Word1;
			}
			set
			{
				if ((this._Word1 != value))
				{
					this.OnWord1Changing(value);
					this.SendPropertyChanging();
					this._Word1 = value;
					this.SendPropertyChanged("Word1");
					this.OnWord1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Word_World_syn", Storage="_World_syns", ThisKey="Id", OtherKey="Word_id")]
		public EntitySet<World_syn> World_syns
		{
			get
			{
				return this._World_syns;
			}
			set
			{
				this._World_syns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_World_syns(World_syn entity)
		{
			this.SendPropertyChanging();
			entity.Word = this;
		}
		
		private void detach_World_syns(World_syn entity)
		{
			this.SendPropertyChanging();
			entity.Word = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.World_syn")]
	public partial class World_syn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Word_id;
		
		private string _Word_S;
		
		private System.Nullable<double> _distance;
		
		private EntityRef<Word> _Word;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWord_idChanging(int value);
    partial void OnWord_idChanged();
    partial void OnWord_SChanging(string value);
    partial void OnWord_SChanged();
    partial void OndistanceChanging(System.Nullable<double> value);
    partial void OndistanceChanged();
    #endregion
		
		public World_syn()
		{
			this._Word = default(EntityRef<Word>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word_id", DbType="Int NOT NULL")]
		public int Word_id
		{
			get
			{
				return this._Word_id;
			}
			set
			{
				if ((this._Word_id != value))
				{
					if (this._Word.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWord_idChanging(value);
					this.SendPropertyChanging();
					this._Word_id = value;
					this.SendPropertyChanged("Word_id");
					this.OnWord_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word_S", DbType="NChar(40) NOT NULL", CanBeNull=false)]
		public string Word_S
		{
			get
			{
				return this._Word_S;
			}
			set
			{
				if ((this._Word_S != value))
				{
					this.OnWord_SChanging(value);
					this.SendPropertyChanging();
					this._Word_S = value;
					this.SendPropertyChanged("Word_S");
					this.OnWord_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distance", DbType="Float")]
		public System.Nullable<double> distance
		{
			get
			{
				return this._distance;
			}
			set
			{
				if ((this._distance != value))
				{
					this.OndistanceChanging(value);
					this.SendPropertyChanging();
					this._distance = value;
					this.SendPropertyChanged("distance");
					this.OndistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Word_World_syn", Storage="_Word", ThisKey="Word_id", OtherKey="Id", IsForeignKey=true)]
		public Word Word
		{
			get
			{
				return this._Word.Entity;
			}
			set
			{
				Word previousValue = this._Word.Entity;
				if (((previousValue != value) 
							|| (this._Word.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Word.Entity = null;
						previousValue.World_syns.Remove(this);
					}
					this._Word.Entity = value;
					if ((value != null))
					{
						value.World_syns.Add(this);
						this._Word_id = value.Id;
					}
					else
					{
						this._Word_id = default(int);
					}
					this.SendPropertyChanged("Word");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Word_search")]
	public partial class Word_search : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Word_search1;
		
		private string _long;
		
		private string _latid;
		
		private int _Searcher_id;
		
		private System.Nullable<System.DateTime> _date_s;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWord_search1Changing(string value);
    partial void OnWord_search1Changed();
    partial void OnlongChanging(string value);
    partial void OnlongChanged();
    partial void OnlatidChanging(string value);
    partial void OnlatidChanged();
    partial void OnSearcher_idChanging(int value);
    partial void OnSearcher_idChanged();
    partial void Ondate_sChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_sChanged();
    #endregion
		
		public Word_search()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Word_search", Storage="_Word_search1", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Word_search1
		{
			get
			{
				return this._Word_search1;
			}
			set
			{
				if ((this._Word_search1 != value))
				{
					this.OnWord_search1Changing(value);
					this.SendPropertyChanging();
					this._Word_search1 = value;
					this.SendPropertyChanged("Word_search1");
					this.OnWord_search1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="long", Storage="_long", DbType="NVarChar(50)")]
		public string @long
		{
			get
			{
				return this._long;
			}
			set
			{
				if ((this._long != value))
				{
					this.OnlongChanging(value);
					this.SendPropertyChanging();
					this._long = value;
					this.SendPropertyChanged("@long");
					this.OnlongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latid", DbType="NVarChar(50)")]
		public string latid
		{
			get
			{
				return this._latid;
			}
			set
			{
				if ((this._latid != value))
				{
					this.OnlatidChanging(value);
					this.SendPropertyChanging();
					this._latid = value;
					this.SendPropertyChanged("latid");
					this.OnlatidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Searcher_id", DbType="Int NOT NULL")]
		public int Searcher_id
		{
			get
			{
				return this._Searcher_id;
			}
			set
			{
				if ((this._Searcher_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearcher_idChanging(value);
					this.SendPropertyChanging();
					this._Searcher_id = value;
					this.SendPropertyChanged("Searcher_id");
					this.OnSearcher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_s", DbType="Date")]
		public System.Nullable<System.DateTime> date_s
		{
			get
			{
				return this._date_s;
			}
			set
			{
				if ((this._date_s != value))
				{
					this.Ondate_sChanging(value);
					this.SendPropertyChanging();
					this._date_s = value;
					this.SendPropertyChanged("date_s");
					this.Ondate_sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Word_search", Storage="_User", ThisKey="Searcher_id", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Word_searches.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Word_searches.Add(this);
						this._Searcher_id = value.ID;
					}
					else
					{
						this._Searcher_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
